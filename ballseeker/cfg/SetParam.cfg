#!/usr/bin/env python
PACKAGE = "ballseeker"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("b_min",    int_t,    0, "An Integer parameter", 0,  0, 255)
gen.add("g_min",    int_t,    0, "An Integer parameter", 0,  0, 255)
gen.add("r_min",    int_t,    0, "An Integer parameter", 0,  0, 255)

gen.add("b_max",    int_t,    0, "An Integer parameter", 255,  0, 255)
gen.add("g_max",    int_t,    0, "An Integer parameter", 255,  0, 255)
gen.add("r_max",    int_t,    0, "An Integer parameter", 255,  0, 255)

gen.add("h_min",    int_t,    0, "An Integer parameter", 0,  0, 180)
gen.add("s_min",    int_t,    0, "An Integer parameter", 0,  0, 255)
gen.add("v_min",    int_t,    0, "An Integer parameter", 0,  0, 255)

gen.add("h_max",    int_t,    0, "An Integer parameter", 180,  0, 180)
gen.add("s_max",    int_t,    0, "An Integer parameter", 255,  0, 255)
gen.add("v_max",    int_t,    0, "An Integer parameter", 255,  0, 255)

savetype_enum = gen.enum([  gen.const("red_ball",    int_t, 0, "A small constant"),
                            gen.const("yellow_ball", int_t, 1, "A medium constant"),
                            gen.const("blue_ball",   int_t, 2, "A large constant"),
                            gen.const("no_save",     int_t, 3, "An extra large constant")], "An enum to set savetype")

gen.add("savetype", int_t, 0, "A size parameter which is edited via an enum", 3, 0, 3, edit_method=savetype_enum)

exit(gen.generate(PACKAGE, "seekernode", "SetParam"))

